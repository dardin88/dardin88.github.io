{"version":3,"file":"modern-interactions.min.js","names":["document","addEventListener","prefersReducedMotion","window","matchMedia","matches","body","classList","add","navLinks","querySelectorAll","navbarCollapse","querySelector","normalizePath","p","replace","forEach","link","e","this","style","transform","setTimeout","rawHref","getAttribute","url","URL","href","location","origin","_","currentPath","pathname","linkPath","hash","startsWith","length","target","preventDefault","top","pageYOffset","getBoundingClientRect","header","offset","getComputedStyle","position","offsetHeight","getHeaderOffset","scrollTo","Math","max","behavior","contains","bootstrap","Collapse","getInstance","toggle","hide","observer","IntersectionObserver","entries","entry","isIntersecting","animationDelay","threshold","rootMargin","el","observe","icon","rel","toLowerCase","includes","setAttribute","trim","remove","navbar","getElementById","scrollTimeout","innerWidth","clearTimeout","button","navbarToggler","animation","slideStyle","createElement","textContent","head","appendChild"],"sources":["modern-interactions.js"],"mappings":"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","ignoreList":[],"sourcesContent":["// Modern interactions and animations for the website\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Check for reduced motion preference\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    \n    if (prefersReducedMotion) {\n        document.body.classList.add('reduced-motion');\n        // Don't return: still enable basic, non-animated behaviors like offset scrolling\n    }\n\n    // Dark mode is handled automatically by CSS @media (prefers-color-scheme: dark)\n\n    // Add smooth scroll behavior for internal links and collapse mobile menu on nav clicks\n    const navLinks = document.querySelectorAll('.nav-link, .js-scroll-trigger');\n    const navbarCollapse = document.querySelector('.navbar-collapse');\n    function normalizePath(p) {\n        // Ensure trailing slash for index.html and collapse duplicate slashes\n        return p.replace(/\\\\+/g, '/').replace(/\\/index\\.html$/i, '/');\n    }\n\n    function getHeaderOffset() {\n        const header = document.querySelector('.navbar.fixed-top, #sideNav');\n        let offset = 0;\n        if (header) {\n            const styles = window.getComputedStyle(header);\n            if (styles.position === 'fixed') {\n                offset = header.offsetHeight || 0;\n            }\n        }\n        // small extra spacing\n        return offset + 8;\n    }\n\n    navLinks.forEach(link => {\n        link.addEventListener('click', function(e) {\n            // Add active state animation\n            this.style.transform = 'scale(0.95)';\n            setTimeout(() => {\n                this.style.transform = '';\n            }, 150);\n\n            // Smooth scroll for hash links on same page\n            const rawHref = this.getAttribute('href') || '';\n            // Resolve full URL of the link to compare against current location\n            let url;\n            try {\n                url = new URL(this.href, window.location.origin);\n            } catch (_) {\n                url = null;\n            }\n\n            // Handle hash-only and same-page links like \"/page#id\" or \"index.html#id\"\n            const currentPath = normalizePath(window.location.pathname || '/');\n            const linkPath = url ? normalizePath(url.pathname) : currentPath;\n            const hash = url ? url.hash : (rawHref.startsWith('#') ? rawHref : '');\n\n            if (hash && hash.length > 1 && linkPath === currentPath && (!url || url.origin === window.location.origin)) {\n                const target = document.querySelector(hash);\n                if (target) {\n                    e.preventDefault();\n                    const top = window.pageYOffset + target.getBoundingClientRect().top - getHeaderOffset();\n                    if (prefersReducedMotion) {\n                        window.scrollTo(0, Math.max(0, top));\n                    } else {\n                        window.scrollTo({ top: Math.max(0, top), behavior: 'smooth' });\n                    }\n                }\n            }\n\n            // Collapse mobile menu (Bootstrap 5 API)\n            if (navbarCollapse && navbarCollapse.classList.contains('show') && window.bootstrap && window.bootstrap.Collapse) {\n                const instance = window.bootstrap.Collapse.getInstance(navbarCollapse) || new window.bootstrap.Collapse(navbarCollapse, { toggle: false });\n                instance.hide();\n            }\n        });\n    });\n\n    // Intersection observer for fade-in animations\n    const observerOptions = {\n        threshold: 0.2,\n        rootMargin: '0px 0px -20px 0px'\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting && !entry.target.classList.contains('fade-in-up')) {\n                entry.target.classList.add('fade-in-up');\n                entry.target.style.animationDelay = '0s';\n            }\n        });\n    }, observerOptions);\n\n    // Observe all cards and sections (reduced scope)\n    const elementsToAnimate = document.querySelectorAll('.modern-card');\n    elementsToAnimate.forEach(el => {\n        observer.observe(el);\n    });\n\n    // Simplified hover effects to reduce flickering\n    const socialIcons = document.querySelectorAll('.list-social-icons a');\n    socialIcons.forEach(icon => {\n        icon.addEventListener('mouseenter', function() {\n            this.style.transform = 'translateY(-2px)';\n        });\n        \n        icon.addEventListener('mouseleave', function() {\n            this.style.transform = '';\n        });\n    });\n\n    // Removed parallax effect to reduce flickering and improve performance\n\n    // Add loading animation to external links\n    const externalLinks = document.querySelectorAll('a[target=\"_blank\"]');\n    externalLinks.forEach(link => {\n        // Ensure security best practice\n        const rel = (link.getAttribute('rel') || '').toLowerCase();\n        if (!rel.includes('noopener')) {\n            link.setAttribute('rel', (rel ? rel + ' ' : '') + 'noopener');\n        }\n        if (!rel.includes('noreferrer')) {\n            link.setAttribute('rel', (link.getAttribute('rel') + ' noreferrer').trim());\n        }\n\n        link.addEventListener('click', function() {\n            this.classList.add('loading');\n            setTimeout(() => {\n                this.classList.remove('loading');\n            }, 1000);\n        });\n    });\n\n    // Simplified navbar interaction (reduced animations)\n    const navbar = document.getElementById('sideNav');\n    if (navbar) {\n        // Simplified blur effect on scroll for mobile\n        let scrollTimeout;\n        window.addEventListener('scroll', () => {\n            if (window.innerWidth <= 991) {\n                clearTimeout(scrollTimeout);\n                scrollTimeout = setTimeout(() => {\n                    const scrollTop = window.pageYOffset;\n                    if (scrollTop > 50) {\n                        navbar.classList.add('backdrop-blur');\n                    } else {\n                        navbar.classList.remove('backdrop-blur');\n                    }\n                }, 10);\n            }\n        });\n    }\n\n    // Simplified ripple effect to reduce flickering\n    const buttons = document.querySelectorAll('.btn-modern, .list-social-icons a');\n    buttons.forEach(button => {\n        button.addEventListener('click', function(e) {\n            // Simple scale effect\n            this.style.transform = 'scale(0.95)';\n            setTimeout(() => {\n                this.style.transform = '';\n            }, 150);\n        });\n    });\n\n    // Improve mobile menu experience\n    const navbarToggler = document.querySelector('.navbar-toggler');\n    \n    if (navbarToggler && navbarCollapse) {\n        navbarToggler.addEventListener('click', function() {\n            setTimeout(() => {\n                if (navbarCollapse.classList.contains('show')) {\n                    navbarCollapse.style.animation = 'slideDown 0.3s ease-out';\n                } else {\n                    navbarCollapse.style.animation = 'slideUp 0.3s ease-out';\n                }\n            }, 10);\n        });\n    }\n\n    // Add slide animations\n    const slideStyle = document.createElement('style');\n    slideStyle.textContent = `\n        @keyframes slideDown {\n            from { opacity: 0; transform: translateY(-20px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        @keyframes slideUp {\n            from { opacity: 1; transform: translateY(0); }\n            to { opacity: 0; transform: translateY(-20px); }\n        }\n    `;\n    document.head.appendChild(slideStyle);\n});\n"]}