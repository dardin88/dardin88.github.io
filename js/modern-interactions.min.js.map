{"version":3,"file":"modern-interactions.min.js","names":["document","addEventListener","prefersReducedMotion","window","matchMedia","matches","body","classList","add","documentElement","style","scrollBehavior","navLinks","querySelectorAll","navbarCollapse","querySelector","forEach","link","e","this","transform","transition","setTimeout","href","getAttribute","startsWith","length","target","preventDefault","scrollIntoView","behavior","block","contains","bootstrap","Collapse","getInstance","toggle","hide","observer","IntersectionObserver","entries","entry","isIntersecting","unobserve","threshold","rootMargin","el","observe","rel","includes","setAttribute","trim","navbar","getElementById","innerWidth","ticking","updateNavbar","scrollY","requestAnimationFrame","button"],"sources":["modern-interactions.js"],"mappings":"AACAA,SAASC,iBAAiB,mBAAoB,WAE1C,MAAMC,EAAuBC,OAAOC,WAAW,oCAAoCC,QAE/EH,GACAF,SAASM,KAAKC,UAAUC,IAAI,kBAIhCR,SAASS,gBAAgBC,MAAMC,eAAiBT,EAAuB,OAAS,SAGhF,MAAMU,EAAWZ,SAASa,iBAAiB,aACrCC,EAAiBd,SAASe,cAAc,oBAkC9C,GAhCAH,EAASI,QAAQC,IACbA,EAAKhB,iBAAiB,QAAS,SAASiB,GAEpCC,KAAKT,MAAMU,UAAY,cACvBD,KAAKT,MAAMW,WAAa,uBACxBC,WAAW,KACPH,KAAKT,MAAMU,UAAY,IACxB,KAGH,MAAMG,EAAOJ,KAAKK,aAAa,QAC/B,GAAID,GAAQA,EAAKE,WAAW,MAAQF,EAAKG,OAAS,EAAG,CACjD,MAAMC,EAAS3B,SAASe,cAAcQ,GAClCI,IACAT,EAAEU,iBACFD,EAAOE,eAAe,CAClBC,SAAU5B,EAAuB,OAAS,SAC1C6B,MAAO,UAGnB,CAGA,GAAIjB,GAAgBP,UAAUyB,SAAS,SAAW7B,OAAO8B,WAAWC,SAAU,EACzD/B,OAAO8B,UAAUC,SAASC,YAAYrB,IACvC,IAAIX,OAAO8B,UAAUC,SAASpB,EAAgB,CAAEsB,QAAQ,KAC/DC,MACb,CACJ,MAICnC,EAAsB,CACvB,MAAMoC,EAAW,IAAIC,qBAAsBC,IACvCA,EAAQxB,QAAQyB,IACRA,EAAMC,iBACND,EAAMd,OAAOpB,UAAUC,IAAI,cAC3B8B,EAASK,UAAUF,EAAMd,YAGlC,CAAEiB,UAAW,GAAKC,WAAY,sBAEjC7C,SAASa,iBAAiB,gBAAgBG,QAAQ8B,GAAMR,EAASS,QAAQD,GAC7E,CAMA9C,SAASa,iBAAiB,sBAAsBG,QAAQC,IACpD,MAAM+B,EAAM/B,EAAKO,aAAa,QAAU,GACnCwB,EAAIC,SAAS,aACdhC,EAAKiC,aAAa,MAAO,GAAGF,aAAeG,QAE1CH,EAAIC,SAAS,eACdhC,EAAKiC,aAAa,MAAO,GAAGjC,EAAKO,aAAa,oBAAoB2B,UAK1E,MAAMC,EAASpD,SAASqD,eAAe,WACvC,GAAID,GAAUjD,OAAOmD,YAAc,IAAK,CACpC,IAAIC,GAAU,EAEd,SAASC,IACLJ,EAAO7C,UAAU6B,OAAO,gBAAiBjC,OAAOsD,QAAU,IAC1DF,GAAU,CACd,CAEApD,OAAOF,iBAAiB,SAAU,KACzBsD,IACDG,sBAAsBF,GACtBD,GAAU,IAGtB,CAGAvD,SAASa,iBAAiB,qCAAqCG,QAAQ2C,IACnEA,EAAO1D,iBAAiB,QAAS,WAC7BkB,KAAKT,MAAMU,UAAY,cACvBD,KAAKT,MAAMW,WAAa,uBACxBC,WAAW,KACPH,KAAKT,MAAMU,UAAY,IACxB,IACP,IAER","ignoreList":[],"sourcesContent":["// Modern interactions and animations for the website\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Check for reduced motion preference\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    \n    if (prefersReducedMotion) {\n        document.body.classList.add('reduced-motion');\n    }\n\n    // Add smooth scroll behavior for internal links using native CSS\n    document.documentElement.style.scrollBehavior = prefersReducedMotion ? 'auto' : 'smooth';\n\n    // Simplified navigation handling\n    const navLinks = document.querySelectorAll('.nav-link');\n    const navbarCollapse = document.querySelector('.navbar-collapse');\n\n    navLinks.forEach(link => {\n        link.addEventListener('click', function(e) {\n            // Simple native CSS transition for active state\n            this.style.transform = 'scale(0.95)';\n            this.style.transition = 'transform 0.15s ease';\n            setTimeout(() => {\n                this.style.transform = '';\n            }, 150);\n\n            // Handle hash links with native scrollIntoView\n            const href = this.getAttribute('href');\n            if (href && href.startsWith('#') && href.length > 1) {\n                const target = document.querySelector(href);\n                if (target) {\n                    e.preventDefault();\n                    target.scrollIntoView({\n                        behavior: prefersReducedMotion ? 'auto' : 'smooth',\n                        block: 'start'\n                    });\n                }\n            }\n\n            // Collapse mobile menu using native Bootstrap 5 API\n            if (navbarCollapse?.classList.contains('show') && window.bootstrap?.Collapse) {\n                const collapse = window.bootstrap.Collapse.getInstance(navbarCollapse) || \n                                new window.bootstrap.Collapse(navbarCollapse, { toggle: false });\n                collapse.hide();\n            }\n        });\n    });\n\n    // Use native Intersection Observer for fade-in animations\n    if (!prefersReducedMotion) {\n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    entry.target.classList.add('fade-in-up');\n                    observer.unobserve(entry.target); // Stop observing once animated\n                }\n            });\n        }, { threshold: 0.2, rootMargin: '0px 0px -20px 0px' });\n\n        document.querySelectorAll('.modern-card').forEach(el => observer.observe(el));\n    }\n\n    // Simplified hover effects using CSS :hover instead of JS\n    // Remove JS hover handlers and rely on CSS transitions\n\n    // Security for external links\n    document.querySelectorAll('a[target=\"_blank\"]').forEach(link => {\n        const rel = link.getAttribute('rel') || '';\n        if (!rel.includes('noopener')) {\n            link.setAttribute('rel', `${rel} noopener`.trim());\n        }\n        if (!rel.includes('noreferrer')) {\n            link.setAttribute('rel', `${link.getAttribute('rel')} noreferrer`.trim());\n        }\n    });\n\n    // Simplified navbar scroll effect using CSS classes\n    const navbar = document.getElementById('sideNav');\n    if (navbar && window.innerWidth <= 991) {\n        let ticking = false;\n        \n        function updateNavbar() {\n            navbar.classList.toggle('backdrop-blur', window.scrollY > 50);\n            ticking = false;\n        }\n\n        window.addEventListener('scroll', () => {\n            if (!ticking) {\n                requestAnimationFrame(updateNavbar);\n                ticking = true;\n            }\n        });\n    }\n\n    // Simple click effects using native CSS transitions\n    document.querySelectorAll('.btn-modern, .list-social-icons a').forEach(button => {\n        button.addEventListener('click', function() {\n            this.style.transform = 'scale(0.95)';\n            this.style.transition = 'transform 0.15s ease';\n            setTimeout(() => {\n                this.style.transform = '';\n            }, 150);\n        });\n    });\n});\n"]}